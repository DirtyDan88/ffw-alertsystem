* Oberflaeche zur Eingabe von Testalarmierungen
    - Ort
    - Einsatzart
    - Zeitverzägerung / Auslösezeit festlegen
    (Hierauf achten das gestartet Alarmierungen kenntlich gemacht werden und wieder beendet werden können,
    bei Änderungen an der Eingabemaske reicht ein Überschreiben der Alarmierungsangaben)
    
* Screensaver-Modi verhindern

* gpio serial boot: http://blog.oscarliang.net/raspberry-pi-and-arduino-connected-serial-gpio/

* Aufbau einer Möglichkeit zur "Text to Speech" Sprachausgabe über HDMI
    - Straße Hausnummer
    - Ort
    - Einsatzstichwort
    
* Auslesen der Straße und Hausnummer aus "Pocsag 1200"
    - laut Rene, Dennis und Armin befindet sich diese immer an der selben Stelle

* Option zum Ausschalten des Alarmmonitors
    - Manuell
    - Zeit
  
* Desktopshortcut zum Ausschalten des Alarmmonitors
    - Option zur Verwenung eines GPIO (Taster zum Triggern)
    - Schließen aller laufenden Prozesse die nicht benötigt werden und Ausschalten des Fernsehers
    (Serialport muss nach verwendung immer geschlossen werden, eine mehrfache verwendung ist nicht möglich)
    - Loggen aller manuell gestarteten Prozesse um das Beenden zu vereinfachen/ermöglichen
    
* User "pi" in den Rechten weiter beschränken um Anwederfehler zu vermeiden

* Einen .pdf Viewer installieren der einen Präsentationsmodus ermöglicht

* Airmouse aussuchen, bestellen, testen, verbauen

* Chrome Sitzungen vor dem Start des Alarmmonitors beeenden um den Vollbildmodus zu erzwingen


****************************************************************************************************************
Ab hier nur noch Ideen für die Zukunft

* Möglichkeit zur Anzeige des Einsatzstichwortes auf weiterem Pi
    - Hintergrund ist hier ein 19" Monitor im Eingangsbereich
    (Ich würde mich wieder um die Hardware kümmern: Monitor ein und Auschalten und der Bewegungsmelder)
    Bei Alarmierung:
        Triggerung bei Eingehen einer Alarmierung
        Monitor anschalten
        Einsatzstichwort anzeigen (gut zu wissen ob eher Überhosen oder Schutzbrillen gebraucht werden)
        nach 15min Automatischer wechsel in "Normalmodus"
    Im Normalfall:
        Triggerung über angeschlossenen Bewegungsmelder vor dem Monitor
        Monitor Anschalten
        Anzeigen von: Herzlich willkommen - Freiwillige Feuerwehr Meckesheim / Abteilung Mönchzell mit Logo und aktueller Uhrzeit in groß
        Weitere Ideen: Anzeige der nächsten Übungen
        nach 5min ohne Trigger Ausschalten
        
    - Eventuelles Einrichten einer Service Seite die vom Funkraum-PC aufgerufen werden kann
        Upload einer Bilderpräsentation oder des Kalenders mit den Terminen
        Manuelles Unterdrücken des Monitors (Sleepstate)
        
* Navigation für das LF (Tabletsuche)
    - Funktionalitäten:
        GPS / Wlan / 7"-10" Touch Display (Toll wäre eine Induktive Lademöglichkeit, die Spule könnte im LF fest verbaut werden, vielleicht mit einer Hülle möglich)
    - Zu prüfen:
        Startskripte und Einschränkungen der Benutzoberfläche um die Navigation im Vollbild laufen zu lassen ohne durch versehentliches Berühren die Navigation zu beenden
        Lauffähigkeit von Navit auf Android 4.1-4.4 mit der Übergabe der Einsatzorte per sbus (Für Navit GPS-Funktionalität wird "gpsd" "gpsd-clients" und "python-gps" benötigt)
        Hintergrundskript das mittels WLAN einen Einsatzort empfängt und an Navit übergibt
        Einbinden von Hydranten in Navit aus der Openfiremap (GeoJSON, GPX, KML) (overpass-turbo.eu -> Wizard "hydrant")
        Beenden der Navigation bei erreichen der Gerätehauses mit anschließendem Reset aller Einstellungen
        Eventuelle Anpassung der Benutzeroberfläche von Navit um die Bedienung auf unsere bedürfnisse anzupassen
        
    


        
